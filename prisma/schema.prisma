generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trip {
  id           String             @id @default(uuid())
  name         String
  location     String
  startDate    DateTime
  endDate      DateTime
  pricePerDay  Decimal            @db.Decimal(8, 2)
  description  String
  coverImage   String
  imagesUrl    String[]
  maxGuests    Int
  highlights   String[]
  reservations TripeReservation[]
  countryCode  String
  recommended  Boolean            @default(false)
}

model TripeReservation {
  id        String   @id @default(uuid())
  tripId    String
  userId    String
  startDate DateTime
  endDate   DateTime
  totalPaid Decimal  @db.Decimal(8, 2)
  trip      Trip     @relation(fields: [tripId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String             @id @default(cuid())
  name          String?
  email         String?            @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  reservations  TripeReservation[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
